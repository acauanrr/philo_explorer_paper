name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Python Backend Tests
  test-python:
    name: Python Backend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend-python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./backend-python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      working-directory: ./backend-python
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Type check with mypy
      working-directory: ./backend-python
      run: |
        mypy . --ignore-missing-imports || true

    - name: Test with pytest
      working-directory: ./backend-python
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term-missing || true

  # Node.js API Gateway Tests
  test-node:
    name: API Gateway Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api-gateway/package-lock.json

    - name: Install dependencies
      working-directory: ./api-gateway
      run: npm ci

    - name: Lint
      working-directory: ./api-gateway
      run: npm run lint || true

    - name: Run tests
      working-directory: ./api-gateway
      run: npm test || true

  # Frontend Tests
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint
      working-directory: ./frontend
      run: npm run lint

    - name: Type check
      working-directory: ./frontend
      run: npm run type-check || true

    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --passWithNoTests || true

    - name: Build
      working-directory: ./frontend
      run: npm run build

  # Docker Build Test
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker images
      working-directory: ./infra
      run: |
        docker-compose build --no-cache

    - name: Check Docker Compose config
      working-directory: ./infra
      run: |
        docker-compose config